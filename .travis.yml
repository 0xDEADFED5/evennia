dist: xenial
language: python
cache: pip

services:
  - postgresql
  - mysql

python:
  - "3.5"

env:
  - TESTING_DB=sqlite3
  - TESTING_DB=postgresql
  - TESTING_DB=mysql

before_install: 

    # - psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE evennia TO evennia;"
  - if [[ $TESTING_DB == postgresql ]]; psql -U postgres -c "CREATE DATABASE evennia;" fi
  - if [[ $TESTING_DB == postgresql ]]; psql -U postgres -c "CREATE USER evennia WITH PASSWORD 'password';" fi
  - if [[ $TESTING_DB == postgresql ]]; psql -U postgres -c "ALTER USER evennia CREATEDB;" fi
  - if [[ $TESTING_DB == mysql ]]; then mysql -u root -e "CREATE DATABASE evennia CHARACTER SET utf8mb4;" fi
  - if [[ $TESTING_DB == mysql ]]; then mysql -u root -e "CREATE USER 'evennia'@'localhost' IDENTIFIED BY 'password';" fi
  - if [[ $TESTING_DB == mysql ]]; mysql -u root -e "GRANT ALL ON *.* TO 'evennia'@'localhost' IDENTIFIED BY 'password';" fi

install:
  - if [[ $TESTING_DB == postgresql ]]; pip install psycopg2-binary fi
  - if [[ $TESTING_DB == mysql ]]; pip install mysqlclient fi
  - pip install coveralls
  - pip install -e .

before_script:
  - evennia --init testing_mygame
  - cp .travis/${TESTING_DB}_settings.py testing_mygame/server/conf/settings.py
  - cd testing_mygame
  - evennia migrate
  - evennia collectstatic --noinput

script:
  - coverage run --source=../evennia --omit=*/migrations/*,*/urls.py,*/test*.py,*.sh,*.txt,*.md,*.pyc,*.service ../bin/unix/evennia test --settings=settings --keepdb evennia

after_success:
  - coveralls
